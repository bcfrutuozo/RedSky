@model RedSky.Presentation.Web.ViewModels.AtividadeViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Nova Atividade</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.CodigoAtividade, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodigoAtividade, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CodigoAtividade, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Descricao, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Servico, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Servico, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Servico, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Incidencia, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdIncidencia, ViewBag.Incidencias as SelectList, "Selecione o tipo de incidência", new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IdIncidencia, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tributacao, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdTributacao, ViewBag.Tributacoes as SelectList, "Selecione a tributação", new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IdTributacao, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Operacao, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdOperacao, ViewBag.Operacoes as SelectList, "Selecione a operação", new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IdOperacao, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsServico, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsServico)
                    @Html.ValidationMessageFor(model => model.IsServico, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsImune, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsImune)
                    @Html.ValidationMessageFor(model => model.IsImune, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsIsento, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsIsento)
                    @Html.ValidationMessageFor(model => model.IsIsento, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItensServico, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdItensServico, ViewBag.ItensServicos as SelectList, "Selecione os itens do serviço", new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IdItensServico, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Grupo, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grupo, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Grupo, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Utilizacao, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdUtilizacao, ViewBag.Utilizacoes as SelectList, "Selecione a utilização", new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IdUtilizacao, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>