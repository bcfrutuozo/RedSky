//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Abrasf2", ConfigurationName="SPTatuiNFSeConsultarNFSePorRPS.ConsultarNfsePorRpsSoapPort")]
    public interface ConsultarNfsePorRpsSoapPort {
        
        // CODEGEN: Generating message contract since the wrapper name (ConsultarNfsePorRps.Execute) of message ExecuteRequest does not match the default value (Execute)
        [System.ServiceModel.OperationContractAttribute(Action="Abrasf2action/ACONSULTARNFSEPORRPS.Execute", ReplyAction="*")]
        RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteResponse Execute(RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Abrasf2action/ACONSULTARNFSEPORRPS.Execute", ReplyAction="*")]
        System.Threading.Tasks.Task<RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteResponse> ExecuteAsync(RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConsultarNfsePorRps.Execute", WrapperNamespace="Abrasf2", IsWrapped=true)]
    public partial class ExecuteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Abrasf2", Order=0)]
        public string Entrada;
        
        public ExecuteRequest() {
        }
        
        public ExecuteRequest(string Entrada) {
            this.Entrada = Entrada;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConsultarNfsePorRps.ExecuteResponse", WrapperNamespace="Abrasf2", IsWrapped=true)]
    public partial class ExecuteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Abrasf2", Order=0)]
        public string Resposta;
        
        public ExecuteResponse() {
        }
        
        public ExecuteResponse(string Resposta) {
            this.Resposta = Resposta;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConsultarNfsePorRpsSoapPortChannel : RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ConsultarNfsePorRpsSoapPort, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultarNfsePorRpsSoapPortClient : System.ServiceModel.ClientBase<RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ConsultarNfsePorRpsSoapPort>, RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ConsultarNfsePorRpsSoapPort {
        
        public ConsultarNfsePorRpsSoapPortClient() {
        }
        
        public ConsultarNfsePorRpsSoapPortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConsultarNfsePorRpsSoapPortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultarNfsePorRpsSoapPortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultarNfsePorRpsSoapPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteResponse RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ConsultarNfsePorRpsSoapPort.Execute(RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteRequest request) {
            return base.Channel.Execute(request);
        }
        
        public string Execute(string Entrada) {
            RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteRequest inValue = new RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteRequest();
            inValue.Entrada = Entrada;
            RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteResponse retVal = ((RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ConsultarNfsePorRpsSoapPort)(this)).Execute(inValue);
            return retVal.Resposta;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteResponse> RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ConsultarNfsePorRpsSoapPort.ExecuteAsync(RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteRequest request) {
            return base.Channel.ExecuteAsync(request);
        }
        
        public System.Threading.Tasks.Task<RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteResponse> ExecuteAsync(string Entrada) {
            RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteRequest inValue = new RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ExecuteRequest();
            inValue.Entrada = Entrada;
            return ((RedSky.Infrastructure.NFSe.SPTatuiNFSeConsultarNFSePorRPS.ConsultarNfsePorRpsSoapPort)(this)).ExecuteAsync(inValue);
        }
    }
}
